2007-06-08 Brian Nickel <brian.nickel@gmail.com>

	* FastCgi/FastCgi/FastCgi.mdp: Build as library.
	
	* FastCgi/FastCgi/AssemblyInfo.cs: Added title and description.
	
	* FastCgi/FastCgi/Structures/BeginRequestBody.cs: Changed namespace.
	
	* FastCgi/FastCgi/Structures/EndRequestBody.cs: Changed namespace.
	
	* FastCgi/FastCgi/Structures/Record.cs: Use ISocketAbstraction instead
	of Socket.
	
	* FastCgi/FastCgi/Structures/NameValuePair.cs: Changed namespace.
	
	* FastCgi/FastCgi/Connection.cs: Use ISocketAbstraction instead of
	Socket.
	
	* FastCgi/FastCgi/Logger.cs: Don't constantly flush and don't throw an
	exception if no output file was specified.
	
	* FastCgi/FastCgi/SocketAbstractions/ISocketAbstraction.cs: Added.
	Wraps around socket implementations.
	
	* FastCgi/FastCgi/SocketAbstractions/TcpSocket.cs: Added. Handles
	standard TCP sockets.
	
	* FastCgi/FastCgi/SocketAbstractions/StandardSocket.cs: Added. Handles
	managed sockets.
	
	* FastCgi/FastCgi/Main.cs: Deleted. Project is now a library.
	
	* FastCgi/FastCgi/Servers: Deleted. Servers have been refactored to
	handle different socket types rather than a different socket superclass
	for each type of socket.
	
	* FastCgi/FastCgi/Server.cs: Moved from Servers/
	
	* FastCgi/FastCgi/Requests/Request.cs: Include data length in 
	SendStreamData to support data passed from a buffer.
	
	* FastCgi/FastCgi/Requests/ResponderRequest.cs: Don't close the request
	if the appStatus == int.MinValue. This affords the IResponder the
	opportunity to create its own thread.
	
	* FastCgi/FastCgi.mds: Automatic changes.
	
	* AND THE COOL PART:
	
	* FastCgi/Mono.WebServer.FastCgi/AssemblyInfo.cs:
	* FastCgi/Mono.WebServer.FastCgi/WebSource.cs:
	* FastCgi/Mono.WebServer.FastCgi/ApplicationHost.cs:
	* FastCgi/Mono.WebServer.FastCgi/Responder.cs:
	* FastCgi/Mono.WebServer.FastCgi/WorkerRequest.cs:
	* FastCgi/Mono.WebServer.FastCgi/Mono.WebServer.FastCgi.mdp:
	* FastCgi/Mono.WebServer.FastCgi/server.cs: Added. This is a web server
	implementation built on top of Mono.WebServer and Mono.FastCgi providing
	ASP.NET support.

2007-06-08 Brian Nickel <brian.nickel@gmail.com>

	* FastCgi/Structures/NameValuePair.cs: Use new Logger.Write for better
	output.
	
	* FastCgi/Connection.cs: Reject multiplexed requests if disabled. Rename
	Start to Run. Add Stop to end the connection properly.
	
	* FastCgi/Logger.cs: Incorporate the string formatter into "Write".
	
	* FastCgi/Main.cs: Update for API changes.
	
	* FastCgi/Servers/Server.cs: Use code from
	Mono.WebServer.ApplicationServer to allow the server thread to run in
	the background. Fix some bugs which were causing the server to hang.
	
	* FastCgi/Requests/Request.cs: Add properties: Server and RequestID.
	
	* FastCgi/Requests/ResponderRequest.cs: Check if input_data == null.
	Use QueueUserWorkItem when multiplexing.

2007-06-07 Brian Nickel <brian.nickel@gmail.com>

	* FastCgi/Structures/NameValuePair.cs: Reworked NameValuePair to support
	a user specified encoding. Moved the parsing of collection to internal
	"static IDictionary FromData (byte [] data)". Added support for
	rendering a collection.
	
	* FastCgi/Connection.cs: Added support for rejecting requests if too
	many are occuring simulaneously. Added support for "FCGI_GET_VALUES"
	requests. Inform the server when a request has been completed. Prevent
	accepting requests if the maximum number of requests has been reached.
	
	* FastCgi/Main.cs: Use new server specific API for registering the
	responder.
	
	* FastCgi/Servers/Server.cs: Added support for limiting connections and
	requests, and enabling/disabling multiplexing. Added support for FastCGI
	style server.GetValues. Prevent accepting if the maximum number of
	connections has been reached. Moved responder registration from
	ResponderRequest to allow for per-server responders.
	
	* FastCgi/Requests/Request.cs: Replaced name/value parsing with 
	NameValuePair.FromData.
	
	* FastCgi/Requests/ResponderRequest.cs: Moved responder registration to
	Server.

2007-06-04 Brian Nickel <brian.nickel@gmail.com>

	* FastCgi/Responders/: Renamed to "Requests".
	* FastCgi/FastCgi.mdp: Automatic changes.
	
	* FastCgi/Structures/NameValuePair.cs: Replaced TryParse() with a
	constructor and switched to System.Encoding.Default.
	
	* FastCgi/Structures/BeginRequestBody.cs:
	* FastCgi/Structures/EndRequestBody.cs:
	* FastCgi/Structures/Record.cs:
	* FastCgi/Connection.cs:
	* FastCgi/Logger.cs:
	* FastCgi/Main.cs:
	* FastCgi/Servers/TcpServer.cs:
	* FastCgi/Servers/Server.cs:
	* FastCgi/Requests/Request.cs:
	* FastCgi/Requests/ResponderRequest.cs: Applied Mono Coding Guidelines.
