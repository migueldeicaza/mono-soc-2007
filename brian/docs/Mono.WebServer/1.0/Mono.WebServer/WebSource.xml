<Type Name="WebSource" FullName="Mono.WebServer.WebSource">
  <TypeSignature Language="C#" Value="public abstract class WebSource : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.WebServer</AssemblyName>
    <AssemblyVersion>0.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebSource ();" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRequestBroker">
      <MemberSignature Language="C#" Value="public abstract Mono.WebServer.IRequestBroker CreateRequestBroker ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.WebServer.IRequestBroker</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSocket">
      <MemberSignature Language="C#" Value="public abstract System.Net.Sockets.Socket CreateSocket ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a socket capable of listening for and accepting connections.</summary>
        <returns>A <see cref="T:System.Net.Sockets.Socket" /> capable of listening for and accepting connections.</returns>
        <remarks>Requests accepted by the returned <see cref="T:System.Net.Sockets.Socket" /> will be interpreted by the <see cref="T:Mono.WebServer.Worker" /> provided by <see cref="M:Mono.WebServer.WebSource.CreateWorker(System.Net.Sockets.Socket,Mono.WebServer.ApplicationServer)" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWorker">
      <MemberSignature Language="C#" Value="public abstract Mono.WebServer.Worker CreateWorker (System.Net.Sockets.Socket client, Mono.WebServer.ApplicationServer server);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.WebServer.Worker</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="System.Net.Sockets.Socket" />
        <Parameter Name="server" Type="Mono.WebServer.ApplicationServer" />
      </Parameters>
      <Docs>
        <param name="client">A <see cref="T:System.Net.Sockets.Socket" /> to process requests on.</param>
        <param name="server">A <see cref="T:Mono.WebServer.ApplicationServer" /> containing applications to use for the request.</param>
        <summary>Creates a <see cref="T:Mono.WebServer.Worker" /> capable of responding to requests contained in a provided socket.</summary>
        <returns>A <see cref="T:Mono.WebServer.Worker" /> capable of responding to requests contained in a provided socket.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Evokes <see cref="M:Mono.WebServer.WebSource.Dispose(System.Boolean)" /> freeing or resetting resources.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">A <see cref="T:System.Boolean" /> indicating whether or not the method was called by <see cref="M:Mono.WebServer.WebSource.Dispose()" />.</param>
        <summary>Performs application-defined tasks associated with freeing or resetting resources.</summary>
        <remarks>See <see cref="M:System.IDisposable.Dispose()" /> for information on the purpose and usage of this method.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationHostType">
      <MemberSignature Language="C#" Value="public abstract Type GetApplicationHostType ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the type of <see cref="T:Mono.WebServer.IApplicationHost" /> to use when hosting applications with the current instance.</summary>
        <returns>A <see cref="T:System.Type" /> for a class that implements <see cref="T:Mono.WebServer.IApplicationHost" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
  <Docs>
    <summary>This abstract class serves as a source of web requests for a specific server implementation.</summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>
