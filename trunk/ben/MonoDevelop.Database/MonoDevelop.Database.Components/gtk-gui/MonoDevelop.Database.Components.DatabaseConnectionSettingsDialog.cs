// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.42
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace MonoDevelop.Database.Components {
    
    
    public partial class DatabaseConnectionSettingsDialog {
        
        private Gtk.Notebook notebook;
        
        private Gtk.Table tableGeneral;
        
        private Gtk.ComboBox comboProvider;
        
        private Gtk.Entry entryName;
        
        private Gtk.Entry entryServer;
        
        private Gtk.Entry entryUsername;
        
        private Gtk.HBox hboxDatabase;
        
        private Gtk.ComboBoxEntry comboDatabase;
        
        private Gtk.Button buttonRefresh;
        
        private Gtk.Button buttonOpen;
        
        private Gtk.HBox hboxPassword;
        
        private Gtk.Entry entryPassword;
        
        private Gtk.CheckButton checkSavePassword;
        
        private Gtk.Label label3;
        
        private Gtk.Label label4;
        
        private Gtk.Label label5;
        
        private Gtk.Label label6;
        
        private Gtk.Label label7;
        
        private Gtk.Label label8;
        
        private Gtk.Label label9;
        
        private Gtk.SpinButton spinPort;
        
        private Gtk.Label label1;
        
        private Gtk.Table tableAdvanced;
        
        private Gtk.CheckButton checkCustom;
        
        private Gtk.Label label10;
        
        private Gtk.Label label11;
        
        private Gtk.ScrolledWindow scrolledwindow;
        
        private Gtk.TextView textConnectionString;
        
        private Gtk.SpinButton spinMaxPoolSize;
        
        private Gtk.SpinButton spinMinPoolSize;
        
        private Gtk.Label label2;
        
        private Gtk.Button buttonCancel;
        
        private Gtk.Button buttonOk;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget MonoDevelop.Database.Components.DatabaseConnectionSettingsDialog
            this.Name = "MonoDevelop.Database.Components.DatabaseConnectionSettingsDialog";
            this.TypeHint = ((Gdk.WindowTypeHint)(1));
            this.WindowPosition = ((Gtk.WindowPosition)(1));
            this.SkipTaskbarHint = true;
            this.HasSeparator = false;
            // Internal child MonoDevelop.Database.Components.DatabaseConnectionSettingsDialog.VBox
            Gtk.VBox w1 = this.VBox;
            w1.Name = "dialog1_VBox";
            w1.BorderWidth = ((uint)(2));
            // Container child dialog1_VBox.Gtk.Box+BoxChild
            this.notebook = new Gtk.Notebook();
            this.notebook.CanFocus = true;
            this.notebook.Name = "notebook";
            this.notebook.CurrentPage = 0;
            // Container child notebook.Gtk.Notebook+NotebookChild
            this.tableGeneral = new Gtk.Table(((uint)(7)), ((uint)(2)), false);
            this.tableGeneral.Name = "tableGeneral";
            this.tableGeneral.RowSpacing = ((uint)(6));
            this.tableGeneral.ColumnSpacing = ((uint)(6));
            this.tableGeneral.BorderWidth = ((uint)(6));
            // Container child tableGeneral.Gtk.Table+TableChild
            this.comboProvider = new Gtk.ComboBox();
            this.comboProvider.Name = "comboProvider";
            this.tableGeneral.Add(this.comboProvider);
            Gtk.Table.TableChild w2 = ((Gtk.Table.TableChild)(this.tableGeneral[this.comboProvider]));
            w2.LeftAttach = ((uint)(1));
            w2.RightAttach = ((uint)(2));
            w2.XOptions = ((Gtk.AttachOptions)(4));
            w2.YOptions = ((Gtk.AttachOptions)(4));
            // Container child tableGeneral.Gtk.Table+TableChild
            this.entryName = new Gtk.Entry();
            this.entryName.CanDefault = true;
            this.entryName.CanFocus = true;
            this.entryName.Name = "entryName";
            this.entryName.IsEditable = true;
            this.entryName.ActivatesDefault = true;
            this.entryName.InvisibleChar = '●';
            this.tableGeneral.Add(this.entryName);
            Gtk.Table.TableChild w3 = ((Gtk.Table.TableChild)(this.tableGeneral[this.entryName]));
            w3.TopAttach = ((uint)(1));
            w3.BottomAttach = ((uint)(2));
            w3.LeftAttach = ((uint)(1));
            w3.RightAttach = ((uint)(2));
            w3.YOptions = ((Gtk.AttachOptions)(4));
            // Container child tableGeneral.Gtk.Table+TableChild
            this.entryServer = new Gtk.Entry();
            this.entryServer.CanFocus = true;
            this.entryServer.Name = "entryServer";
            this.entryServer.IsEditable = true;
            this.entryServer.InvisibleChar = '●';
            this.tableGeneral.Add(this.entryServer);
            Gtk.Table.TableChild w4 = ((Gtk.Table.TableChild)(this.tableGeneral[this.entryServer]));
            w4.TopAttach = ((uint)(2));
            w4.BottomAttach = ((uint)(3));
            w4.LeftAttach = ((uint)(1));
            w4.RightAttach = ((uint)(2));
            w4.YOptions = ((Gtk.AttachOptions)(4));
            // Container child tableGeneral.Gtk.Table+TableChild
            this.entryUsername = new Gtk.Entry();
            this.entryUsername.CanFocus = true;
            this.entryUsername.Name = "entryUsername";
            this.entryUsername.IsEditable = true;
            this.entryUsername.InvisibleChar = '●';
            this.tableGeneral.Add(this.entryUsername);
            Gtk.Table.TableChild w5 = ((Gtk.Table.TableChild)(this.tableGeneral[this.entryUsername]));
            w5.TopAttach = ((uint)(4));
            w5.BottomAttach = ((uint)(5));
            w5.LeftAttach = ((uint)(1));
            w5.RightAttach = ((uint)(2));
            w5.XOptions = ((Gtk.AttachOptions)(4));
            w5.YOptions = ((Gtk.AttachOptions)(4));
            // Container child tableGeneral.Gtk.Table+TableChild
            this.hboxDatabase = new Gtk.HBox();
            this.hboxDatabase.Name = "hboxDatabase";
            this.hboxDatabase.Spacing = 6;
            // Container child hboxDatabase.Gtk.Box+BoxChild
            this.comboDatabase = Gtk.ComboBoxEntry.NewText();
            this.comboDatabase.Name = "comboDatabase";
            this.hboxDatabase.Add(this.comboDatabase);
            Gtk.Box.BoxChild w6 = ((Gtk.Box.BoxChild)(this.hboxDatabase[this.comboDatabase]));
            w6.Position = 0;
            // Container child hboxDatabase.Gtk.Box+BoxChild
            this.buttonRefresh = new Gtk.Button();
            this.buttonRefresh.CanFocus = true;
            this.buttonRefresh.Name = "buttonRefresh";
            this.buttonRefresh.UseStock = true;
            this.buttonRefresh.UseUnderline = true;
            this.buttonRefresh.Label = "gtk-refresh";
            this.hboxDatabase.Add(this.buttonRefresh);
            Gtk.Box.BoxChild w7 = ((Gtk.Box.BoxChild)(this.hboxDatabase[this.buttonRefresh]));
            w7.Position = 1;
            w7.Expand = false;
            w7.Fill = false;
            // Container child hboxDatabase.Gtk.Box+BoxChild
            this.buttonOpen = new Gtk.Button();
            this.buttonOpen.CanFocus = true;
            this.buttonOpen.Name = "buttonOpen";
            this.buttonOpen.UseStock = true;
            this.buttonOpen.UseUnderline = true;
            this.buttonOpen.Label = "gtk-open";
            this.hboxDatabase.Add(this.buttonOpen);
            Gtk.Box.BoxChild w8 = ((Gtk.Box.BoxChild)(this.hboxDatabase[this.buttonOpen]));
            w8.Position = 2;
            w8.Expand = false;
            w8.Fill = false;
            this.tableGeneral.Add(this.hboxDatabase);
            Gtk.Table.TableChild w9 = ((Gtk.Table.TableChild)(this.tableGeneral[this.hboxDatabase]));
            w9.TopAttach = ((uint)(6));
            w9.BottomAttach = ((uint)(7));
            w9.LeftAttach = ((uint)(1));
            w9.RightAttach = ((uint)(2));
            w9.XOptions = ((Gtk.AttachOptions)(4));
            w9.YOptions = ((Gtk.AttachOptions)(4));
            // Container child tableGeneral.Gtk.Table+TableChild
            this.hboxPassword = new Gtk.HBox();
            this.hboxPassword.Name = "hboxPassword";
            this.hboxPassword.Spacing = 6;
            // Container child hboxPassword.Gtk.Box+BoxChild
            this.entryPassword = new Gtk.Entry();
            this.entryPassword.CanFocus = true;
            this.entryPassword.Name = "entryPassword";
            this.entryPassword.IsEditable = true;
            this.entryPassword.Visibility = false;
            this.entryPassword.InvisibleChar = '●';
            this.hboxPassword.Add(this.entryPassword);
            Gtk.Box.BoxChild w10 = ((Gtk.Box.BoxChild)(this.hboxPassword[this.entryPassword]));
            w10.Position = 0;
            // Container child hboxPassword.Gtk.Box+BoxChild
            this.checkSavePassword = new Gtk.CheckButton();
            this.checkSavePassword.CanFocus = true;
            this.checkSavePassword.Name = "checkSavePassword";
            this.checkSavePassword.Label = Mono.Unix.Catalog.GetString("Save Password");
            this.checkSavePassword.Active = true;
            this.checkSavePassword.DrawIndicator = true;
            this.checkSavePassword.UseUnderline = true;
            this.hboxPassword.Add(this.checkSavePassword);
            Gtk.Box.BoxChild w11 = ((Gtk.Box.BoxChild)(this.hboxPassword[this.checkSavePassword]));
            w11.Position = 1;
            w11.Expand = false;
            this.tableGeneral.Add(this.hboxPassword);
            Gtk.Table.TableChild w12 = ((Gtk.Table.TableChild)(this.tableGeneral[this.hboxPassword]));
            w12.TopAttach = ((uint)(5));
            w12.BottomAttach = ((uint)(6));
            w12.LeftAttach = ((uint)(1));
            w12.RightAttach = ((uint)(2));
            w12.XOptions = ((Gtk.AttachOptions)(4));
            w12.YOptions = ((Gtk.AttachOptions)(4));
            // Container child tableGeneral.Gtk.Table+TableChild
            this.label3 = new Gtk.Label();
            this.label3.Name = "label3";
            this.label3.Xalign = 0F;
            this.label3.LabelProp = Mono.Unix.Catalog.GetString("Type");
            this.tableGeneral.Add(this.label3);
            Gtk.Table.TableChild w13 = ((Gtk.Table.TableChild)(this.tableGeneral[this.label3]));
            w13.XOptions = ((Gtk.AttachOptions)(4));
            w13.YOptions = ((Gtk.AttachOptions)(4));
            // Container child tableGeneral.Gtk.Table+TableChild
            this.label4 = new Gtk.Label();
            this.label4.Name = "label4";
            this.label4.Xalign = 0F;
            this.label4.LabelProp = Mono.Unix.Catalog.GetString("Name");
            this.tableGeneral.Add(this.label4);
            Gtk.Table.TableChild w14 = ((Gtk.Table.TableChild)(this.tableGeneral[this.label4]));
            w14.TopAttach = ((uint)(1));
            w14.BottomAttach = ((uint)(2));
            w14.XOptions = ((Gtk.AttachOptions)(4));
            w14.YOptions = ((Gtk.AttachOptions)(4));
            // Container child tableGeneral.Gtk.Table+TableChild
            this.label5 = new Gtk.Label();
            this.label5.Name = "label5";
            this.label5.Xalign = 0F;
            this.label5.LabelProp = Mono.Unix.Catalog.GetString("Server");
            this.tableGeneral.Add(this.label5);
            Gtk.Table.TableChild w15 = ((Gtk.Table.TableChild)(this.tableGeneral[this.label5]));
            w15.TopAttach = ((uint)(2));
            w15.BottomAttach = ((uint)(3));
            w15.XOptions = ((Gtk.AttachOptions)(4));
            w15.YOptions = ((Gtk.AttachOptions)(4));
            // Container child tableGeneral.Gtk.Table+TableChild
            this.label6 = new Gtk.Label();
            this.label6.Name = "label6";
            this.label6.Xalign = 0F;
            this.label6.LabelProp = Mono.Unix.Catalog.GetString("Port");
            this.tableGeneral.Add(this.label6);
            Gtk.Table.TableChild w16 = ((Gtk.Table.TableChild)(this.tableGeneral[this.label6]));
            w16.TopAttach = ((uint)(3));
            w16.BottomAttach = ((uint)(4));
            w16.XOptions = ((Gtk.AttachOptions)(4));
            w16.YOptions = ((Gtk.AttachOptions)(4));
            // Container child tableGeneral.Gtk.Table+TableChild
            this.label7 = new Gtk.Label();
            this.label7.Name = "label7";
            this.label7.Xalign = 0F;
            this.label7.LabelProp = Mono.Unix.Catalog.GetString("Username");
            this.tableGeneral.Add(this.label7);
            Gtk.Table.TableChild w17 = ((Gtk.Table.TableChild)(this.tableGeneral[this.label7]));
            w17.TopAttach = ((uint)(4));
            w17.BottomAttach = ((uint)(5));
            w17.XOptions = ((Gtk.AttachOptions)(4));
            w17.YOptions = ((Gtk.AttachOptions)(4));
            // Container child tableGeneral.Gtk.Table+TableChild
            this.label8 = new Gtk.Label();
            this.label8.Name = "label8";
            this.label8.Xalign = 0F;
            this.label8.LabelProp = Mono.Unix.Catalog.GetString("Password");
            this.tableGeneral.Add(this.label8);
            Gtk.Table.TableChild w18 = ((Gtk.Table.TableChild)(this.tableGeneral[this.label8]));
            w18.TopAttach = ((uint)(5));
            w18.BottomAttach = ((uint)(6));
            w18.XOptions = ((Gtk.AttachOptions)(4));
            w18.YOptions = ((Gtk.AttachOptions)(4));
            // Container child tableGeneral.Gtk.Table+TableChild
            this.label9 = new Gtk.Label();
            this.label9.Name = "label9";
            this.label9.Xalign = 0F;
            this.label9.LabelProp = Mono.Unix.Catalog.GetString("Database");
            this.tableGeneral.Add(this.label9);
            Gtk.Table.TableChild w19 = ((Gtk.Table.TableChild)(this.tableGeneral[this.label9]));
            w19.TopAttach = ((uint)(6));
            w19.BottomAttach = ((uint)(7));
            w19.XOptions = ((Gtk.AttachOptions)(4));
            w19.YOptions = ((Gtk.AttachOptions)(4));
            // Container child tableGeneral.Gtk.Table+TableChild
            this.spinPort = new Gtk.SpinButton(1, 65535, 1);
            this.spinPort.CanFocus = true;
            this.spinPort.Name = "spinPort";
            this.spinPort.Adjustment.PageIncrement = 10;
            this.spinPort.ClimbRate = 1;
            this.spinPort.Numeric = true;
            this.spinPort.Value = 1;
            this.tableGeneral.Add(this.spinPort);
            Gtk.Table.TableChild w20 = ((Gtk.Table.TableChild)(this.tableGeneral[this.spinPort]));
            w20.TopAttach = ((uint)(3));
            w20.BottomAttach = ((uint)(4));
            w20.LeftAttach = ((uint)(1));
            w20.RightAttach = ((uint)(2));
            w20.XOptions = ((Gtk.AttachOptions)(4));
            w20.YOptions = ((Gtk.AttachOptions)(4));
            this.notebook.Add(this.tableGeneral);
            Gtk.Notebook.NotebookChild w21 = ((Gtk.Notebook.NotebookChild)(this.notebook[this.tableGeneral]));
            w21.TabExpand = false;
            // Notebook tab
            this.label1 = new Gtk.Label();
            this.label1.Name = "label1";
            this.label1.LabelProp = Mono.Unix.Catalog.GetString("General");
            this.notebook.SetTabLabel(this.tableGeneral, this.label1);
            this.label1.ShowAll();
            // Container child notebook.Gtk.Notebook+NotebookChild
            this.tableAdvanced = new Gtk.Table(((uint)(4)), ((uint)(2)), false);
            this.tableAdvanced.Name = "tableAdvanced";
            this.tableAdvanced.RowSpacing = ((uint)(6));
            this.tableAdvanced.ColumnSpacing = ((uint)(6));
            this.tableAdvanced.BorderWidth = ((uint)(6));
            // Container child tableAdvanced.Gtk.Table+TableChild
            this.checkCustom = new Gtk.CheckButton();
            this.checkCustom.CanFocus = true;
            this.checkCustom.Name = "checkCustom";
            this.checkCustom.Label = Mono.Unix.Catalog.GetString("Use custom connection string");
            this.checkCustom.DrawIndicator = true;
            this.checkCustom.UseUnderline = true;
            this.tableAdvanced.Add(this.checkCustom);
            Gtk.Table.TableChild w22 = ((Gtk.Table.TableChild)(this.tableAdvanced[this.checkCustom]));
            w22.TopAttach = ((uint)(2));
            w22.BottomAttach = ((uint)(3));
            w22.RightAttach = ((uint)(2));
            w22.YOptions = ((Gtk.AttachOptions)(4));
            // Container child tableAdvanced.Gtk.Table+TableChild
            this.label10 = new Gtk.Label();
            this.label10.Name = "label10";
            this.label10.Xalign = 0F;
            this.label10.LabelProp = Mono.Unix.Catalog.GetString("Min Pool Size");
            this.tableAdvanced.Add(this.label10);
            Gtk.Table.TableChild w23 = ((Gtk.Table.TableChild)(this.tableAdvanced[this.label10]));
            w23.XOptions = ((Gtk.AttachOptions)(4));
            w23.YOptions = ((Gtk.AttachOptions)(4));
            // Container child tableAdvanced.Gtk.Table+TableChild
            this.label11 = new Gtk.Label();
            this.label11.Name = "label11";
            this.label11.Xalign = 0F;
            this.label11.LabelProp = Mono.Unix.Catalog.GetString("Max Pool Size");
            this.tableAdvanced.Add(this.label11);
            Gtk.Table.TableChild w24 = ((Gtk.Table.TableChild)(this.tableAdvanced[this.label11]));
            w24.TopAttach = ((uint)(1));
            w24.BottomAttach = ((uint)(2));
            w24.XOptions = ((Gtk.AttachOptions)(4));
            w24.YOptions = ((Gtk.AttachOptions)(4));
            // Container child tableAdvanced.Gtk.Table+TableChild
            this.scrolledwindow = new Gtk.ScrolledWindow();
            this.scrolledwindow.Sensitive = false;
            this.scrolledwindow.CanFocus = true;
            this.scrolledwindow.Name = "scrolledwindow";
            this.scrolledwindow.VscrollbarPolicy = ((Gtk.PolicyType)(1));
            this.scrolledwindow.HscrollbarPolicy = ((Gtk.PolicyType)(1));
            this.scrolledwindow.ShadowType = ((Gtk.ShadowType)(1));
            // Container child scrolledwindow.Gtk.Container+ContainerChild
            this.textConnectionString = new Gtk.TextView();
            this.textConnectionString.CanFocus = true;
            this.textConnectionString.Name = "textConnectionString";
            this.scrolledwindow.Add(this.textConnectionString);
            this.tableAdvanced.Add(this.scrolledwindow);
            Gtk.Table.TableChild w26 = ((Gtk.Table.TableChild)(this.tableAdvanced[this.scrolledwindow]));
            w26.TopAttach = ((uint)(3));
            w26.BottomAttach = ((uint)(4));
            w26.RightAttach = ((uint)(2));
            w26.YOptions = ((Gtk.AttachOptions)(4));
            // Container child tableAdvanced.Gtk.Table+TableChild
            this.spinMaxPoolSize = new Gtk.SpinButton(1, 100, 1);
            this.spinMaxPoolSize.CanFocus = true;
            this.spinMaxPoolSize.Name = "spinMaxPoolSize";
            this.spinMaxPoolSize.Adjustment.PageIncrement = 10;
            this.spinMaxPoolSize.ClimbRate = 1;
            this.spinMaxPoolSize.Numeric = true;
            this.spinMaxPoolSize.Value = 5;
            this.tableAdvanced.Add(this.spinMaxPoolSize);
            Gtk.Table.TableChild w27 = ((Gtk.Table.TableChild)(this.tableAdvanced[this.spinMaxPoolSize]));
            w27.TopAttach = ((uint)(1));
            w27.BottomAttach = ((uint)(2));
            w27.LeftAttach = ((uint)(1));
            w27.RightAttach = ((uint)(2));
            w27.XOptions = ((Gtk.AttachOptions)(4));
            w27.YOptions = ((Gtk.AttachOptions)(4));
            // Container child tableAdvanced.Gtk.Table+TableChild
            this.spinMinPoolSize = new Gtk.SpinButton(1, 100, 1);
            this.spinMinPoolSize.CanFocus = true;
            this.spinMinPoolSize.Name = "spinMinPoolSize";
            this.spinMinPoolSize.Adjustment.PageIncrement = 10;
            this.spinMinPoolSize.ClimbRate = 1;
            this.spinMinPoolSize.Numeric = true;
            this.spinMinPoolSize.Value = 1;
            this.tableAdvanced.Add(this.spinMinPoolSize);
            Gtk.Table.TableChild w28 = ((Gtk.Table.TableChild)(this.tableAdvanced[this.spinMinPoolSize]));
            w28.LeftAttach = ((uint)(1));
            w28.RightAttach = ((uint)(2));
            w28.XOptions = ((Gtk.AttachOptions)(4));
            w28.YOptions = ((Gtk.AttachOptions)(4));
            this.notebook.Add(this.tableAdvanced);
            Gtk.Notebook.NotebookChild w29 = ((Gtk.Notebook.NotebookChild)(this.notebook[this.tableAdvanced]));
            w29.Position = 1;
            w29.TabExpand = false;
            // Notebook tab
            this.label2 = new Gtk.Label();
            this.label2.Name = "label2";
            this.label2.LabelProp = Mono.Unix.Catalog.GetString("Advanced");
            this.notebook.SetTabLabel(this.tableAdvanced, this.label2);
            this.label2.ShowAll();
            w1.Add(this.notebook);
            Gtk.Box.BoxChild w30 = ((Gtk.Box.BoxChild)(w1[this.notebook]));
            w30.Position = 0;
            w30.Expand = false;
            w30.Fill = false;
            // Internal child MonoDevelop.Database.Components.DatabaseConnectionSettingsDialog.ActionArea
            Gtk.HButtonBox w31 = this.ActionArea;
            w31.Name = "dialog1_ActionArea";
            w31.Spacing = 6;
            w31.BorderWidth = ((uint)(5));
            w31.LayoutStyle = ((Gtk.ButtonBoxStyle)(4));
            // Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
            this.buttonCancel = new Gtk.Button();
            this.buttonCancel.CanDefault = true;
            this.buttonCancel.CanFocus = true;
            this.buttonCancel.Name = "buttonCancel";
            this.buttonCancel.UseStock = true;
            this.buttonCancel.UseUnderline = true;
            this.buttonCancel.Label = "gtk-cancel";
            this.AddActionWidget(this.buttonCancel, -6);
            Gtk.ButtonBox.ButtonBoxChild w32 = ((Gtk.ButtonBox.ButtonBoxChild)(w31[this.buttonCancel]));
            w32.Expand = false;
            w32.Fill = false;
            // Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
            this.buttonOk = new Gtk.Button();
            this.buttonOk.CanDefault = true;
            this.buttonOk.CanFocus = true;
            this.buttonOk.Name = "buttonOk";
            this.buttonOk.UseStock = true;
            this.buttonOk.UseUnderline = true;
            this.buttonOk.Label = "gtk-ok";
            this.AddActionWidget(this.buttonOk, -5);
            Gtk.ButtonBox.ButtonBoxChild w33 = ((Gtk.ButtonBox.ButtonBoxChild)(w31[this.buttonOk]));
            w33.Position = 1;
            w33.Expand = false;
            w33.Fill = false;
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.DefaultWidth = 606;
            this.DefaultHeight = 351;
            this.entryName.HasDefault = true;
            this.Show();
            this.spinPort.Changed += new System.EventHandler(this.PortChanged);
            this.entryPassword.Changed += new System.EventHandler(this.PasswordChanged);
            this.buttonRefresh.Clicked += new System.EventHandler(this.RefreshClicked);
            this.buttonOpen.Clicked += new System.EventHandler(this.OpenClicked);
            this.entryUsername.Changed += new System.EventHandler(this.UsernameChanged);
            this.entryServer.Changed += new System.EventHandler(this.ServerChanged);
            this.entryName.Changed += new System.EventHandler(this.NameChanged);
            this.comboProvider.Changed += new System.EventHandler(this.ProviderChanged);
            this.spinMinPoolSize.Changed += new System.EventHandler(this.MinPoolSizeChanged);
            this.spinMaxPoolSize.Changed += new System.EventHandler(this.MaxPoolSizeChanged);
            this.buttonCancel.Clicked += new System.EventHandler(this.OnCancelClicked);
            this.buttonOk.Clicked += new System.EventHandler(this.OnOkClicked);
        }
    }
}
