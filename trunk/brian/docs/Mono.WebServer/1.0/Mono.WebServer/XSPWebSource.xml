<Type Name="XSPWebSource" FullName="Mono.WebServer.XSPWebSource">
  <TypeSignature Language="C#" Value="public class XSPWebSource : Mono.WebServer.WebSource" />
  <AssemblyInfo>
    <AssemblyName>Mono.WebServer</AssemblyName>
    <AssemblyVersion>0.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.WebServer.WebSource</BaseTypeName>
  </Base>
  <Interfaces />
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XSPWebSource (System.Net.IPAddress address, int port);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">A <see cref="T:System.Net.IPAddress" /> containing the IP address to listen on.</param>
        <param name="port">A <see cref="T:System.Int32" /> containing the port number to listen on.</param>
        <summary>Constructs and initializes a new instance of <see cref="T:Mono.WebServer.XSPWebSource" />, setting it to listen on for incoming requests on a specified address and port.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XSPWebSource (System.Net.IPAddress address, int port, Mono.Security.Protocol.Tls.SecurityProtocolType securityProtocol, System.Security.Cryptography.X509Certificates.X509Certificate cert, Mono.Security.Protocol.Tls.PrivateKeySelectionCallback keyCB, bool allowClientCert, bool requireClientCert);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="securityProtocol" Type="Mono.Security.Protocol.Tls.SecurityProtocolType" />
        <Parameter Name="cert" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="keyCB" Type="Mono.Security.Protocol.Tls.PrivateKeySelectionCallback" />
        <Parameter Name="allowClientCert" Type="System.Boolean" />
        <Parameter Name="requireClientCert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">A <see cref="T:System.Net.IPAddress" /> containing the IP address to listen on.</param>
        <param name="port">A <see cref="T:System.Int32" /> containing the port number to listen on.</param>
        <param name="securityProtocol">A <see cref="T:Mono.Security.Protocol.Tls.SecurityProtocolType" /> specifying what protocol to use when for security.</param>
        <param name="cert">A <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> containing the security certificate to use with the transactions.</param>
        <param name="keyCB">A <see cref="T:Mono.Security.Protocol.Tls.PrivateKeySelectionCallback" /> to be used for private key selection.</param>
        <param name="allowClientCert">A <see cref="T:System.Boolean" /> specifying whether or not to accept client certificates.</param>
        <param name="requireClientCert">A <see cref="T:System.Boolean" /> specifying whether or not to require client certificates.</param>
        <summary>Constructs and initializes a new instance of <see cref="T:Mono.WebServer.XSPWebSource" />, setting it to listen on for incoming requests on a specified address and port with specified certificate information.</summary>
        <remarks>If a secure server is not required, use <see cref="C:Mono.WebServer.XSPWebSource(System.Net.IPAddress,int)" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetListenAddress">
      <MemberSignature Language="C#" Value="public void SetListenAddress (int port);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port">A <see cref="T:System.Int32" /> containing the port number to listen on.</param>
        <summary>Sets the current instance to listen on for incoming requests on a specified port.</summary>
        <remarks>This allows the socket to listen on any IP address with the specified port. To listen on a specific IP address, use <see cref="M:Mono.WebServer.XSPWebSource.SetListenAddress(System.Net.IPAddress,System.Int32)" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetListenAddress">
      <MemberSignature Language="C#" Value="public void SetListenAddress (System.Net.IPAddress address, int port);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">A <see cref="T:System.Net.IPAddress" /> containing the IP address to listen on.</param>
        <param name="port">A <see cref="T:System.Int32" /> containing the port number to listen on.</param>
        <summary>Sets the current instance to listen on for incoming requests on a specified address and port.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetListenAddress">
      <MemberSignature Language="C#" Value="public void SetListenAddress (System.Net.IPEndPoint bindAddress);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindAddress" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="bindAddress">A <see cref="T:System.Net.IPEndPoint" /> containing the local endpoint to bind to.</param>
        <summary>Sets the current instance to listen on for incoming requests on a specified end point.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
  <Docs>
    <summary>This class serves as a source of web requests for the XSP web server implementation.</summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>
